{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { EVENT_TRACKING_KEY, TRACKING_ELEMENT_ID } from './constants';\nexport var gaEventTracking = function gaEventTracking(event) {\n  if (!event) return;\n  var _ref = event || {},\n    category = _ref.category,\n    label = _ref.label,\n    eventLabel = _ref.eventLabel;\n  var common = {\n    event: 'siGamingEvent'\n  };\n  var trackingObj = _objectSpread(_objectSpread({}, common), {}, {\n    si_gaming: {\n      event_name: 'event_name',\n      event_parameter: category,\n      event_value: label\n    }\n  });\n  if (eventLabel) {\n    trackingObj.si_gaming['label'] = eventLabel;\n  }\n  try {\n    window.dataLayer = window.dataLayer || [];\n    if (category && label) {\n      window.dataLayer.push(trackingObj);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport var eventTrackingHandler = function eventTrackingHandler(e) {\n  var ancestorElement = e.target.closest('#' + TRACKING_ELEMENT_ID);\n  var hasTrackingAttribute = ancestorElement === null || ancestorElement === void 0 ? void 0 : ancestorElement.getAttribute(EVENT_TRACKING_KEY);\n  if (hasTrackingAttribute) {\n    var _trackingConstant;\n    try {\n      _trackingConstant = JSON.parse(hasTrackingAttribute);\n    } catch (error) {\n      _trackingConstant = hasTrackingAttribute;\n    }\n    if (_trackingConstant) {\n      gaEventTracking(_trackingConstant);\n    }\n  }\n};\nexport var trackingConstant = {\n  BUTTON_CLICKED: {\n    category: 'button-clicked',\n    label: 'Button Clicked'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}